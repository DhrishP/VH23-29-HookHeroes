generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id                 String      @id @default(uuid())
  userId             String      @unique
  username           String
  coins              Int         @default(0)
  attemptedQuestions Questions[] @relation("attemptedQuestions")
  correctQuestions   Questions[] @relation("correctQuestions")
  createdAt          DateTime    @default(now())
}

model Teacher {
  id               String      @id @default(uuid())
  userId           String      @unique
  username         String
  createdQuestions Questions[] @relation("teacherQuestions")
  createdCourses   Courses[]   @relation("teacherCourses")
  createdAt        DateTime    @default(now())
}

model Courses {
  id          String    @id @default(uuid())
  imageUrl    String
  name        String
  price       Int
  description String
  TeacherId   String    @unique
  creator     Teacher   @relation("teacherCourses", fields: [TeacherId], references: [id])
  createdAt   DateTime  @default(now())
  Purchase    Purchase?
}

model Questions {
  id                  String   @id @default(uuid())
  statement           String
  answer              String
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  options             String[] @default([])
  coins               Int?
  language            String
  difficulty          String?
  attemptedQuestionId String?
  correctQuestionsId  String?
  attemptStudents     Student? @relation("attemptedQuestions", fields: [attemptedQuestionId], references: [id])
  correctStudents     Student? @relation("correctQuestions", fields: [correctQuestionsId], references: [id])
  TeacherId           String?  @unique
  author              Teacher? @relation("teacherQuestions", fields: [TeacherId], references: [id])
  // statsId    String?
  // Quiz       Quiz?    @relation(fields: [quizId], references: [id])
  // quizId     String?
}

model Purchase {
  id       String  @id @default(uuid())
  userId   String  @unique
  courseId String  @unique
  course   Courses @relation(fields: [courseId], references: [id])
  createdAt DateTime @default(now())
}

model StripeCustomer {
  id               String   @id @default(uuid())
  userId           String   @unique
  stripeCustomerId String   @unique
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}
